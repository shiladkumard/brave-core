diff --git a/components/os_crypt/keychain_password_mac.mm b/components/os_crypt/keychain_password_mac.mm
index 6654c46eb0af784a3a2ff64569d5d1931b9fae30..9640ca797a416a4bd73c1e774b6fb6c8e6e320b5 100644
--- a/components/os_crypt/keychain_password_mac.mm
+++ b/components/os_crypt/keychain_password_mac.mm
@@ -7,6 +7,7 @@
 #import <Security/Security.h>
 
 #include "base/base64.h"
+#include "base/command_line.h"
 #include "base/mac/mac_logging.h"
 #include "base/mac/scoped_cftyperef.h"
 #include "base/rand_util.h"
@@ -51,8 +52,8 @@ std::string AddRandomPasswordToKeychain(const AppleKeychain& keychain,
 const char KeychainPassword::service_name[] = "Chrome Safe Storage";
 const char KeychainPassword::account_name[] = "Chrome";
 #else
-const char KeychainPassword::service_name[] = "Chromium Safe Storage";
-const char KeychainPassword::account_name[] = "Chromium";
+const char KeychainPassword::service_name[] = "Brave Safe Storage";
+const char KeychainPassword::account_name[] = "Brave";
 #endif
 
 KeychainPassword::KeychainPassword(const AppleKeychain& keychain)
@@ -61,6 +62,19 @@ KeychainPassword::KeychainPassword(const AppleKeychain& keychain)
 KeychainPassword::~KeychainPassword() = default;
 
 std::string KeychainPassword::GetPassword() const {
+  const char *service_name, *account_name;
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  if (command_line->HasSwitch("import-chrome")) {
+    service_name = "Chrome Safe Storage";
+    account_name = "Chrome";
+  } else if (command_line->HasSwitch("import-chromium") ||
+             command_line->HasSwitch("import-brave")) {
+    service_name = "Chromium Safe Storage";
+    account_name = "Chromium";
+  } else {
+    service_name = ::KeychainPassword::service_name;
+    account_name = ::KeychainPassword::account_name;
+  }
   UInt32 password_length = 0;
   void* password_data = nullptr;
   OSStatus error = keychain_.FindGenericPassword(
